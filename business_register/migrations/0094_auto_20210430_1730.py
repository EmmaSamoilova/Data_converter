# Generated by Django 3.0.7 on 2021-04-30 17:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('location_register', '0022_auto_20210415_0936'),
        ('business_register', '0093_merge_20210428_0728'),
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the object was created. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the object was update. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, default=None, editable=False, null=True)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Car'), (2, 'Truck')], help_text='type of the car', verbose_name='type')),
                ('is_luxury', models.BooleanField(blank=True, default=None, help_text='is luxury', null=True, verbose_name='is luxury')),
                ('brand', models.CharField(blank=True, default='', help_text='brand', max_length=40, verbose_name='brand')),
                ('model', models.CharField(blank=True, default='', help_text='model', max_length=20, verbose_name='model')),
                ('year', models.PositiveSmallIntegerField(blank=True, help_text='year of manufacture', null=True, verbose_name='year of manufacture')),
                ('valuation', models.PositiveIntegerField(blank=True, help_text='valuation', null=True, verbose_name='valuation')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Declaration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the object was created. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the object was update. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, default=None, editable=False, null=True)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'annual declaration'), (3, 'declaration after resignation'), (2, 'declaration before resignation'), (4, 'declaration of the candidate')], help_text='type of the declaration', verbose_name='type')),
                ('year', models.PositiveSmallIntegerField(help_text='year of the declaration', verbose_name='year of the declaration')),
                ('nacp_declaration_id', models.CharField(db_index=True, help_text='NACP id of the declaration', max_length=50, unique=True, verbose_name='NACP id')),
                ('nacp_declarant_id', models.PositiveIntegerField(db_index=True, unique=True, verbose_name='NACP id of the declarant')),
                ('date_of_birth', models.DateField(blank=True, help_text='date of birth of the declarant', null=True, verbose_name='date of birth')),
                ('registration_address', models.TextField(blank=True, default='', help_text='address of registration of the declarant', verbose_name='address of registration')),
                ('residence_address', models.TextField(blank=True, default='', help_text='address of residence of the declarant', verbose_name='address of residence')),
                ('last_job_title', models.TextField(blank=True, default='', help_text='title of the last job of the declarant', verbose_name='last job title')),
                ('last_employer', models.TextField(blank=True, default='', help_text='last employer of the declarant', verbose_name='last employer')),
                ('beneficiary_of', models.ManyToManyField(help_text='beneficiary of company', related_name='beneficiary', to='business_register.Company', verbose_name='beneficiary of')),
                ('pep', models.ForeignKey(help_text='politically exposed person who declares', on_delete=django.db.models.deletion.PROTECT, related_name='declarations', to='business_register.Pep', verbose_name='PEP who declares')),
                ('spouse', models.ForeignKey(blank=True, default=None, help_text='spouse of the declarant', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='spouse', to='business_register.Pep', verbose_name='spouse')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LuxuryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the object was created. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the object was update. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, default=None, editable=False, null=True)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Art'), (2, 'Other')], help_text='type of the item', verbose_name='type')),
                ('additional_info', models.TextField(blank=True, default='', help_text='additional info about the item', verbose_name='additional info')),
                ('acquired_before_first_declaration', models.BooleanField(blank=True, default=None, help_text='acquired before first declaration', null=True, verbose_name='acquired before first declaration')),
                ('trademark', models.CharField(blank=True, default='', help_text='trademark of the item', max_length=40, verbose_name='trademark')),
                ('producer', models.CharField(blank=True, default='', help_text='producer of the item', max_length=20, verbose_name='producer')),
                ('description', models.TextField(blank=True, default='', help_text='description of the item', verbose_name='description')),
                ('valuation', models.PositiveIntegerField(blank=True, help_text='valuation of the item', null=True, verbose_name='valuation')),
                ('declaration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='luxuries', to='business_register.Declaration', verbose_name='declaration')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the object was created. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the object was update. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, default=None, editable=False, null=True)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'House'), (2, 'Land'), (3, 'Garage'), (4, 'Unfinished construction'), (5, 'Other')], help_text='type of the property', verbose_name='type')),
                ('additional_info', models.TextField(blank=True, default='', help_text='additional info about the property', verbose_name='additional info')),
                ('area', models.FloatField(blank=True, help_text='square of the property in square meters', null=True, verbose_name='square')),
                ('valuation', models.PositiveIntegerField(blank=True, help_text='valuation of the property', null=True, verbose_name='valuation')),
                ('city', models.ForeignKey(blank=True, default=None, help_text='city where the property is located', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='declared_pep_properties', to='location_register.RatuCity', verbose_name='address')),
                ('country', models.ForeignKey(blank=True, default=None, help_text='country where the property is located', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='declared_pep_properties', to='location_register.Country', verbose_name='country')),
                ('declaration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='properties', to='business_register.Declaration', verbose_name='declaration')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Securities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the object was created. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the object was update. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, default=None, editable=False, null=True)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Share'), (2, 'Corporate right'), (3, 'Other')], help_text='type of securities', verbose_name='type')),
                ('amount', models.PositiveIntegerField(blank=True, help_text='amount of securities', null=True, verbose_name='amount')),
                ('nominal_value', models.PositiveIntegerField(blank=True, help_text='nominal value of securities', null=True, verbose_name='nominal value')),
                ('valuation', models.PositiveIntegerField(blank=True, help_text='valuation', null=True, verbose_name='valuation')),
                ('declaration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='securities', to='business_register.Declaration', verbose_name='declaration')),
                ('issuer', models.ForeignKey(blank=True, default=None, help_text='issuer of securities', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='shares_from_declarations', to='business_register.Company', verbose_name='issuer')),
                ('trustee', models.ForeignKey(blank=True, default=None, help_text='trustee of securities', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='shares_in_trust', to='business_register.Company', verbose_name='trustee')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SecuritiesRight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the object was created. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the object was update. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, default=None, editable=False, null=True)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Ownership'), (2, 'Joint ownership'), (3, 'Rent'), (4, 'Usage')], help_text='type of the right', verbose_name='type')),
                ('acquisition_date', models.DateField(blank=True, help_text='date of acquisition of the right', null=True, verbose_name='acquisition date')),
                ('share', models.PositiveIntegerField(blank=True, help_text='share of the right', null=True, verbose_name='share of the right')),
                ('full_name', models.CharField(blank=True, default='', help_text='full name of the person that owns the right', max_length=75, verbose_name='full name')),
                ('company', models.ForeignKey(blank=True, default=None, help_text='company or organisation that owns the right', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='business_register_securitiesright_rights', to='business_register.Company', verbose_name='company')),
                ('country_of_citizenship', models.ForeignKey(blank=True, default=None, help_text='country of citizenship of the owner of the the right', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='business_register_securitiesright_rights', to='location_register.Country', verbose_name='country of citizenship')),
                ('pep', models.ForeignKey(blank=True, default=None, help_text='politically exposed person that owns the right', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='business_register_securitiesright_rights', to='business_register.Pep', verbose_name='PEP that owns the right')),
                ('securities', models.ForeignKey(help_text='right to securities', on_delete=django.db.models.deletion.PROTECT, related_name='rights', to='business_register.Securities', verbose_name='securities_right')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PropertyRight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the object was created. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the object was update. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, default=None, editable=False, null=True)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Ownership'), (2, 'Joint ownership'), (3, 'Rent'), (4, 'Usage')], help_text='type of the right', verbose_name='type')),
                ('acquisition_date', models.DateField(blank=True, help_text='date of acquisition of the right', null=True, verbose_name='acquisition date')),
                ('share', models.PositiveIntegerField(blank=True, help_text='share of the right', null=True, verbose_name='share of the right')),
                ('full_name', models.CharField(blank=True, default='', help_text='full name of the person that owns the right', max_length=75, verbose_name='full name')),
                ('company', models.ForeignKey(blank=True, default=None, help_text='company or organisation that owns the right', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='business_register_propertyright_rights', to='business_register.Company', verbose_name='company')),
                ('country_of_citizenship', models.ForeignKey(blank=True, default=None, help_text='country of citizenship of the owner of the the right', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='business_register_propertyright_rights', to='location_register.Country', verbose_name='country of citizenship')),
                ('pep', models.ForeignKey(blank=True, default=None, help_text='politically exposed person that owns the right', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='business_register_propertyright_rights', to='business_register.Pep', verbose_name='PEP that owns the right')),
                ('property', models.ForeignKey(help_text='right to the property', on_delete=django.db.models.deletion.PROTECT, related_name='rights', to='business_register.Property', verbose_name='property_right')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Money',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the object was created. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the object was update. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, default=None, editable=False, null=True)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Bank account'), (2, 'Hard cash'), (3, 'Contribution to the credit union or investment fund'), (4, 'Money lent to another person')], help_text='type', verbose_name='type')),
                ('amount', models.PositiveIntegerField(blank=True, help_text='amount of money', null=True, verbose_name='amount')),
                ('currency', models.PositiveSmallIntegerField(choices=[], help_text='currency', verbose_name='currency')),
                ('non_pep_borrower', models.CharField(blank=True, default='', help_text='full name of the person that borrowed money', max_length=75, verbose_name='borrower')),
                ('bank', models.ForeignKey(blank=True, default=None, help_text='bank, credit union or investment fund where the money is stored', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='money_in_banks', to='business_register.Company', verbose_name='bank')),
                ('declaration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='money', to='business_register.Declaration', verbose_name='declaration')),
                ('owner', models.ForeignKey(help_text='owner of money', on_delete=django.db.models.deletion.PROTECT, related_name='money', to='business_register.Pep', verbose_name='owner')),
                ('pep_borrower', models.ForeignKey(help_text='politically exposed person that borrowed money', on_delete=django.db.models.deletion.PROTECT, related_name='borrowed_money', to='business_register.Pep', verbose_name='PEP that borrowed money')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LuxuryItemRight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the object was created. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the object was update. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, default=None, editable=False, null=True)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Ownership'), (2, 'Joint ownership'), (3, 'Rent'), (4, 'Usage')], help_text='type of the right', verbose_name='type')),
                ('acquisition_date', models.DateField(blank=True, help_text='date of acquisition of the right', null=True, verbose_name='acquisition date')),
                ('share', models.PositiveIntegerField(blank=True, help_text='share of the right', null=True, verbose_name='share of the right')),
                ('full_name', models.CharField(blank=True, default='', help_text='full name of the person that owns the right', max_length=75, verbose_name='full name')),
                ('company', models.ForeignKey(blank=True, default=None, help_text='company or organisation that owns the right', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='business_register_luxuryitemright_rights', to='business_register.Company', verbose_name='company')),
                ('country_of_citizenship', models.ForeignKey(blank=True, default=None, help_text='country of citizenship of the owner of the the right', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='business_register_luxuryitemright_rights', to='location_register.Country', verbose_name='country of citizenship')),
                ('luxury_item', models.ForeignKey(help_text='right to the luxury item', on_delete=django.db.models.deletion.PROTECT, related_name='rights', to='business_register.LuxuryItem', verbose_name='luxury_item_right')),
                ('pep', models.ForeignKey(blank=True, default=None, help_text='politically exposed person that owns the right', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='business_register_luxuryitemright_rights', to='business_register.Pep', verbose_name='PEP that owns the right')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Liability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the object was created. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the object was update. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, default=None, editable=False, null=True)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Loan'), (2, 'Other')], help_text='type of liability', verbose_name='type')),
                ('amount', models.PositiveIntegerField(help_text='amount of liability', verbose_name='amount')),
                ('currency', models.PositiveSmallIntegerField(choices=[], help_text='currency', verbose_name='currency')),
                ('non_pep_creditor', models.CharField(blank=True, default='', help_text='person to whom money is owed', max_length=75, verbose_name='creditor')),
                ('bank_creditor', models.ForeignKey(blank=True, default=None, help_text='bank or company to whom money is owed', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='lent_money', to='business_register.Company', verbose_name='bank')),
                ('declaration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='liabilities', to='business_register.Declaration', verbose_name='declaration')),
                ('owner', models.ForeignKey(help_text='politically exposed person that has the liability', on_delete=django.db.models.deletion.PROTECT, related_name='liabilities', to='business_register.Pep', verbose_name='PEP that has the liability')),
                ('pep_creditor', models.ForeignKey(blank=True, default=None, help_text='politically exposed person to whom money is owed', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='lent_money', to='business_register.Pep', verbose_name='PEP-creditor')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the object was created. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the object was update. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, default=None, editable=False, null=True)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Salary'), (2, 'Interest'), (3, 'Dividends'), (4, 'From sale of property'), (5, 'From sale of securities or corporate rights'), (6, 'Other')], help_text='type of income', verbose_name='type')),
                ('amount', models.PositiveIntegerField(help_text='amount of income', verbose_name='amount')),
                ('paid_by_person', models.CharField(blank=True, default='', help_text='full name of the person that paid', max_length=75, verbose_name='paid by person')),
                ('declaration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='income', to='business_register.Declaration', verbose_name='declaration')),
                ('paid_by_company', models.ForeignKey(blank=True, default=None, help_text='company or organisation that paid', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='paid_to', to='business_register.Company', verbose_name='paid by')),
                ('recipient', models.ForeignKey(help_text='person that got income', on_delete=django.db.models.deletion.PROTECT, related_name='incomes', to='business_register.Pep', verbose_name='recipient')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CarRight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the object was created. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the object was update. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, default=None, editable=False, null=True)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Ownership'), (2, 'Joint ownership'), (3, 'Rent'), (4, 'Usage')], help_text='type of the right', verbose_name='type')),
                ('acquisition_date', models.DateField(blank=True, help_text='date of acquisition of the right', null=True, verbose_name='acquisition date')),
                ('share', models.PositiveIntegerField(blank=True, help_text='share of the right', null=True, verbose_name='share of the right')),
                ('full_name', models.CharField(blank=True, default='', help_text='full name of the person that owns the right', max_length=75, verbose_name='full name')),
                ('car', models.ForeignKey(help_text='right to the car', on_delete=django.db.models.deletion.PROTECT, related_name='rights', to='business_register.Car', verbose_name='car_right')),
                ('company', models.ForeignKey(blank=True, default=None, help_text='company or organisation that owns the right', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='business_register_carright_rights', to='business_register.Company', verbose_name='company')),
                ('country_of_citizenship', models.ForeignKey(blank=True, default=None, help_text='country of citizenship of the owner of the the right', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='business_register_carright_rights', to='location_register.Country', verbose_name='country of citizenship')),
                ('pep', models.ForeignKey(blank=True, default=None, help_text='politically exposed person that owns the right', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='business_register_carright_rights', to='business_register.Pep', verbose_name='PEP that owns the right')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='car',
            name='declaration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cars', to='business_register.Declaration', verbose_name='declaration'),
        ),
    ]
