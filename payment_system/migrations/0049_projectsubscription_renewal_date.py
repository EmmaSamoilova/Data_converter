# Generated by Django 3.1.8 on 2021-04-22 14:25
from calendar import monthrange

from django.db import migrations, models
from django.utils import timezone

from payment_system.models import ProjectSubscription as ProjectSubscriptionType


def increase_term(date, start_day, period='month'):
    assert 1 <= start_day <= 31

    year = date.year
    month = date.month
    if period == 'month':
        if month == 12:
            year += 1
            month = 1
        else:
            month += 1
    elif period == 'year':
        year += 1
    else:
        raise ValueError(f'period = "{period}" not supported!')

    last_day_of_month = monthrange(year, month)[1]
    if start_day > last_day_of_month:
        day = last_day_of_month
    else:
        day = start_day
    return date.replace(year, month, day)


def set_renewal_date(apps, schema):
    ProjectSubscription: ProjectSubscriptionType = apps.get_model('payment_system', 'ProjectSubscription')
    today = timezone.localdate()
    for p2s in ProjectSubscription.objects.all():
        renewal_date = increase_term(p2s.start_date, p2s.start_day, 'month')

        while renewal_date <= today:
            renewal_date = increase_term(renewal_date, p2s.start_day, 'month')

        p2s.renewal_date = renewal_date
        p2s.save()


class Migration(migrations.Migration):

    dependencies = [
        ('payment_system', '0048_auto_20210420_1418'),
    ]

    operations = [
        migrations.AddField(
            model_name='projectsubscription',
            name='renewal_date',
            field=models.DateField(default=None, null=True),
        ),
        migrations.RunPython(
            code=set_renewal_date,
            reverse_code=migrations.RunPython.noop,
        )
    ]
